#include "dHamming.hpp"
#include <iostream>
#include <string>
#include <algorithm>

int main() {
    std::vector<std::string> hashes = {
            "B76464E99693921F9BEDEED9A8CC79F1277CEEF714A6BD3E089F2CCEB0AE0CD6",
            "744E477905BE975E81D84403730A0D021CBCCE246CB6304F509ABA4B97D092F8",
            "6881221E5E1F0D41AE3BDD20E50F87F362A19EC023116D0F687351E41744B007",
            "BA976AA78ED685F086D1B92B64EACED2F7ED82DC8B8077973E1A6FCA8AEA6016",
            "9A5A5253406887D033A1B85A67BAA1DF276CAA41EDF9842E04251313F4F05324",
            "0277F4C3ACCCB20428C6440B4ABE95A1213A426E9BCDCBF714AA5AF331DC65AD",
            "331843DA5ADE0C03A4466059EDBC7E389D6A7C617340F4D2332D7F0D7D64A996",
            "C570E39974DA07B60A40C3548445DC241939693487BBBCD542F040A941F5A129",
            "536C0D4BF5C08005CD68D6161C2B16C7FDA83E9B6CCC9AD03E7CFB92AC2FE757",
            "A27DD1AE308EB72E906A9E11DFBD39EE8A7823DB6B0DD0BF741C19E21D5A7D45",
            "8D84A31B8A156379CFDE49A8D83A29F1BB5781600FD7E324E5DEBDB9B641FE14",
            "8D84A31B8A156379CFDE49A8D83A29F1BB5781600FD7E324E5DEBDB9B641FE15",
            "D7AB202E542EE43E4395EAE42079902FA990098394C607878C8F955B1EBBAA03"
    };
    Chloride::dHamming dH;
    auto dHL = Chloride::CompatHashList();
    std::for_each(hashes.cbegin(), hashes.cend(), [&](std::string hash){
        dHL.Add(hash.c_str());
    });
    auto res = dH.GetPairsOverHammingThreshold(dHL, 16);
    res->Advance();
    std::cout << res->GetLeft() << " : " << res->GetRight() << std::endl;
}